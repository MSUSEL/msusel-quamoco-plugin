<html>
    <head>
        <title>RMF Test</title>
		<link rel="stylesheet" type="text/css" href="quamoco.css" media="screen" />
    </head>
    <body>
        <div class="quamoco_bullets_widget" style="height:100%; width:600px">
      
        <div class="widget">
          
<div class="rmf-bullets" id="rmf-bullets" width="615">
<!--[if lte IE 8 ]> <h3>Your browser is out of date and does not support this widget.</h3> <!--[endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
    
    <h3>Risk Management Framework</h3>
    <hr width="615" align="left"/>
    <script src="d3.min.js"></script>
    <script src="bullets.js"></script>
	<script src="components.js"></script>
<script>

var data = [{"title":"Security","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Access Control","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Audit and Accountability","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Assessment and Auth.","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Config Mgmt.","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Identification and Auth.","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Maintenance","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"},
			{"title":"Risk Analysis","subtitle":"Between 0.0 and 1.0","last10":[0.75,0.5,0.7,0.81,0.79,0.8,0.85,0.9,0.95,1.0],"ranges":[0.9,0.92,0.94,0.96,0.98],"measures":[1.0,1.0],"markers":[0.98],"value":[1.0,0],"grade":"A"}];

var insets = {top: 5, bottom: 20, marginWidth: 5, space: 6, sbarWidth: 4, sbarGap: 2, sparkLeft: 0, sparkWidth: 0, barLeft: 0, sparkMid: 0, maxWidth: 0, valueWidth: 0, valueLeft: 0, barRight: 0, barMid: 0, gradeLeft: 0, gradeMid: 0, gradeWidth: 20, valueMid: 0},
    height = 45 - insets.top - insets.bottom,
	valueFixed = 2,
	containerWidth = 615,
	grade = true;

function updateInsets() {
	var titlelen = [];
	var subtitlelen = [];
	var valuelen = [];
	for (var i = 0; i < data.length; i++) {
		titlelen.push(data[i].title.length);
		subtitlelen.push(data[i].subtitle.length);
		valuelen.push(data[i].value[0].toFixed(valueFixed).toString().length);
	}
	var x = Math.max.apply(Math, titlelen) * 8;
	var y = Math.max.apply(Math, subtitlelen) * 5;
	var z = Math.max.apply(Math, valuelen) * 12;
	insets["sparkLeft"] = Math.max(x, y);
	insets["sparkWidth"] = (insets.sbarWidth * 10) + (insets.sbarGap * 0);
	insets["barLeft"] = insets.sparkLeft + (2 * insets.space) + insets.sparkWidth;
	insets["sparkMid"] = insets.barLeft - ((insets.barLeft - insets.sparkLeft) / 2);
	insets["maxWidth"] = containerWidth - (2 * insets.marginWidth);
	insets["valueWidth"] = 2 * z;
	insets["valueLeft"] = insets.maxWidth - (((grade ? 2 : 1) * insets.space) + (grade ? insets.gradeWidth : 0) + insets.valueWidth);
	insets["barRight"] = insets.valueLeft;
	insets["barMid"] = insets.barRight - ((insets.barRight - insets.barLeft) / 2);
	insets["gradeLeft"] = insets.maxWidth - (insets.gradeWidth + insets.space);
	insets["gradeMid"] = grade ? (insets.maxWidth - ((insets.gradeWidth / 2) + insets.space)) : 0;
	insets["valueMid"] = insets.gradeLeft - ((insets.gradeLeft - insets.valueLeft) / 2);
}
updateInsets();

var chart = d3.bullet()
    .width(insets.barRight - insets.barLeft)
    .height(height);

var svg = d3.select("#rmf-bullets")
	.selectAll("svg")
	.data(data)
    .enter()
	.append("svg")
      .attr("class", "quamoco")
      .attr("width", insets.maxWidth)
      .attr("height", 45)
      .append("g")
      .attr("transform", "translate(" + insets.barLeft + "," + insets.top + ")")
      .call(chart);

var title = svg.append("g")
    .style("text-anchor", "end")
    .attr("transform", "translate(" + (insets.sparkLeft - insets.barLeft) + "," + height / 2 + ")");

title.append("text")
    .attr("class", "label")
    .text(function(d) { return d.title; });

title.append("text")
    .attr("class", "sublabel")
    .attr("dy", "1.4em")
    .text(function(d) { return d.subtitle; });

var value = svg.append("g")
	.style("text-anchor", "end")
	.attr("transform", "translate(" + (insets.valueMid - insets.barLeft) + "," + height / 2 + ")");

value.append("text")
	.attr("class", "value")
	.attr("x", 0)
	.attr("y", height / 2)
	.text(function(d) { return d.value[0].toFixed(2); });

value.append("text")
	.style("text-anchor", "start")
	.attr("class", function(d) {
		if (d.value[1] < 0)
			return "negchange";
		else if (d.value[1] > 0)
			return "poschange";
		else
			return "zerochange";
	})
	.attr("x", insets.space)
	.attr("y", height / 2)
	.attr("fill", function(d) {
		if (d.value[1] < 0)
			return "red";
		else if (d.value[1] > 0)
			return "green";
		else
			return "black";
	})
	.text(function(d) { return "(" + d.value[1].toFixed(1) + ")";});
	
var spark = svg.append("g"),
	w = insets.sparkWidth,
	h = height,
	barPadding = 2;
spark = spark.attr("transform", "translate(" + (insets.sparkLeft - insets.barLeft + insets.space) + "," + height / 2 + ")");
	
spark.selectAll("rect")
	.data(function(d) { return d.last10; })
	.enter()
	.append("rect")
	.attr({
		x: function(d, i) { return i * (w / 10);},
		y: function(d) {return (height / 2 - 20) + (20 - (d * 20));}, //function(d) { var scale = d3.scale.linear().domain([0,1]).range([insets.bottom, insets.top]); return scale.linear(d)},
		width: function(d) { return w / 10 - barPadding; },
		height: function(d) { return ((d * 20)); },
		fill: "black"
	});
	
var grade_g = svg.append("g")
	.attr("transform", "translate(" + (insets.gradeLeft - insets.barLeft) + "," + height / 2 + ")");

grade_g.append("rect")
	.attr({
		x: 0,
		y: -10,
		width: 20,
		height: 20,
	})
	.attr("class", function(d) { return "graderect " + d.grade; });

grade_g.append("text")
	.style("text-anchor", "middle")
	.attr("class", "smallgrade")
	.attr("x", insets.gradeMid - insets.gradeLeft)
	.attr("y", 8)
	.text(function(d) { return d.grade; });
	
var svg2 = d3.select("#rmf-bullets")
	.insert("svg","svg")
		.attr("class", "quamoco")
		.attr("width", insets.maxWidth)
		.attr("height", 20)
		.append("g")
		.style("text-anchor", "start")

svg2.append("text")
	.style("text-anchor", "middle")
	.attr("class", "header")
	.attr("x", insets.sparkMid)
	.attr("y", 15)
	.text("Last 10 Builds");
	
svg2.append("text")
	.style("text-anchor", "middle")
	.attr("class", "header")
	.attr("x", insets.barMid)
	.attr("y", 15)
	.text("Current Build");
	
svg2.append("text")
	.style("text-anchor", "middle")
	.attr("class", "header")
	.attr("x", insets.valueMid)
	.attr("y", 15)
	.text("Current");
	
svg2.append("text")
	.style("text-anchor", "middle")
	.attr("class", "header")
	.attr("x", insets.gradeMid)
	.attr("y", 15)
	.text("Grade");
</script>

<script>




</script>
<!--<![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
</div>
</div>
</div>
    </body>
</html>